{
  "example_queries": [
    {
      "name": "What security best practices should I follow for Databricks?",
      "type": "sat",
      "query": "SELECT id, check_id, category, check, severity, recommendation, doc_url, logic, api FROM {catalog}.{schema}.security_best_practices ORDER BY id ASC"
    },
    {
      "name": "How do my workspaces compare against security best practices?",
      "type": "sat",
      "query": "SELECT sc.workspaceid, sbp.severity, sbp.check_id, sbp.category, check, CASE WHEN sc.score = 0 THEN TRUE WHEN sc.score = 1 THEN FALSE ELSE NULL END AS is_implemented, sbp.recommendation, sbp.doc_url, sc.additional_details FROM {catalog}.{schema}.security_checks sc LEFT JOIN {catalog}.{schema}.security_best_practices sbp ON sc.id = sbp.id ORDER BY sbp.severity ASC, sc.workspaceid DESC"
    },
    {
      "name": "How secure is my Databricks account?",
      "type": "sat",
      "query": "SELECT sc.workspaceid, sbp.severity, sbp.check_id, sbp.category, check, sbp.recommendation, sbp.doc_url, sc.additional_details FROM {catalog}.{schema}.security_checks sc LEFT JOIN {catalog}.{schema}.security_best_practices sbp ON sc.id = sbp.id WHERE sc.score = 1 ORDER BY sbp.severity ASC, sc.workspaceid DESC"
    },
    {
      "name": "Has anyone from Databricks logged into my workspaces recently?",
      "type": "audit",
      "query": "SELECT event_date, event_time, source_ip_address, workspace_id, request_params.user, request_params.duration, request_params.reason, response.status_code FROM system.access.audit WHERE action_name = 'databricksAccess' AND event_date >= (SELECT MAX(event_date) FROM system.access.audit) - INTERVAL 90 DAYS ORDER BY event_date DESC"
    },
    {
      "name": "Can Databricks login to my workspaces?",
      "type": "audit",
      "query": "SELECT event_date, event_time, workspace_id, user_identity.email, CASE WHEN request_params.workspaceConfValues = 'indefinite' THEN 'No Expiration' WHEN cast(request_params.workspaceConfValues AS TIMESTAMP) < event_time THEN 'Disabled Access' ELSE 'Enabled Access for ' || INT(round(cast(cast(request_params.workspaceConfValues AS TIMESTAMP) - event_time AS INT) / 3600)) || ' Hours' END AS set_configuration FROM system.access.audit WHERE action_name = 'workspaceConfEdit' AND request_params.workspaceConfKeys = 'customerApprovedWSLoginExpirationTime' ORDER BY event_time DESC"
    },
     {
      "name": "Have there been any failed authentication attempts recently?",
      "type": "audit",
      "query": "SELECT WINDOW(event_time, '60 minutes').start AS window_start, WINDOW(event_time, '60 minutes').end AS window_end, source_ip_address, ifnull(user_identity.email, request_params.user) AS username, workspace_id, service_name, action_name, response.status_code, response.error_message, count(*) AS total_events FROM system.access.audit WHERE (contains(lower(action_name), 'login') OR contains(lower(action_name), 'auth')) AND response.status_code = 401 AND event_date >= (SELECT MAX(event_date) FROM system.access.audit) - INTERVAL 90 DAYS GROUP BY ALL ORDER BY window_end DESC, total_events DESC"
    },
    {
      "name": "Have there been any failed authorization attempts recently?",
      "type": "audit",
      "query": "SELECT WINDOW(event_time, '60 minutes').start AS window_start, WINDOW(event_time, '60 minutes').end AS window_end, source_ip_address, ifnull(user_identity.email, request_params.user) AS username, workspace_id, service_name, action_name, response.status_code, collect_set(response.error_message) AS error_messages, count(*) AS total_events FROM system.access.audit WHERE action_name NOT IN ('IpAccessDenied', 'accountIpAclsValidationFailed') AND response.status_code = 403 AND event_date >= (SELECT MAX(event_date) FROM system.access.audit) - INTERVAL 90 DAYS GROUP BY ALL ORDER BY window_end DESC, total_events DESC"
    },
    {
      "name": "Have there been any attempts to access my Databricks account from untrusted networks recently?", 
      "type": "audit",
      "query": 
      "SELECT WINDOW(event_time, '60 minutes').start AS window_start, WINDOW(event_time, '60 minutes').end AS window_end, source_ip_address, ifnull(user_identity.email, request_params.user) AS username, workspace_id, service_name, action_name, response.status_code, response.error_message, count(*) AS total_events FROM system.access.audit WHERE action_name IN ('IpAccessDenied', 'accountIpAclsValidationFailed') AND event_date >= (SELECT MAX(event_date) FROM system.access.audit) - INTERVAL 90 DAYS GROUP BY ALL ORDER BY window_end DESC,total_events DESC"
    },
    {
      "name": "Has anyone tried to repeatedly access secrets within my Databricks workspaces recently?",
      "type": "audit",
      "query": "SELECT WINDOW(event_time, '60 minutes').start AS window_start, WINDOW(event_time, '60 minutes').end AS window_end, source_ip_address, ifnull(user_identity.email, request_params.user) AS username, workspace_id, service_name, action_name, response.status_code, collect_set(concat('Scope: ', request_params.scope, ' Key: ', audit.request_params.key)) AS secrets_accessed, collect_set(response.error_message) AS error_messages, count(*) AS total_events FROM system.access.audit WHERE action_name = 'getSecret' AND user_identity.email NOT IN ('System-User') AND event_date >= (SELECT MAX(event_date) FROM system.access.audit) - INTERVAL 90 DAYS GROUP BY ALL ORDER BY window_end DESC, total_events DESC"
    }
  ],
  "comments": [
    {
      "table": "{catalog}.{schema}.security_best_practices", 
      "type": "sat",
      "comment": "The security_best_practices table contains a list of recommended security best practices for your Databricks Data Intelligence Platform. You can join it on id to the security_checks table"
    },
    {
      "table": "{catalog}.{schema}.security_checks", 
      "type": "sat",
      "comment": "The security_checks table contains the results of an analysis performed by the Databricks Security Analysis Tool (SAT). You can use this table to understand the security posture of your Databricks account"
    }
  ]
}